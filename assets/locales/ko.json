{
  "about-me": {
    "trust_professionalism": "신뢰와 전문성 보장",
    "trust_professionalism_content": "고객 만족을 최우선으로 생각합니다. 높은 품질의 서비스를 제공하기 위해, 제 기술과 원칙을 꾸준히 다듬어 왔으며 탁월한 결과를 약속드립니다.",
    "ongoing_support": "지속적인 지원",
    "ongoing_support_content": "귀하의 웹 기반 소프트웨어가 지속적으로 효율적이고 경쟁력 있게 유지되도록 개선해 드립니다. 안정적인 DevOps 프로세스를 통해 긴급 업데이트를 신속히 배포하고, 새로운 기능 모듈을 추가할 수 있습니다.",
    "backend_dev": "백엔드 개발",
    "backend_dev_content": "신뢰할 수 있는 프레임워크를 사용해 빠르고 고품질의 코딩을 통해 웹 애플리케이션의 비즈니스 로직을 정밀하게 구현합니다. 또한, 귀하의 웹 앱이 기업 또는 타사 시스템과 연동될 수 있도록 체계적인 API를 개발합니다.",
    "frontend_design_dev": "프론트엔드 디자인 & 개발",
    "frontend_design_dev_content": "대상 고객층을 면밀히 분석하여 그들의 요구를 파악하고, 이를 UI 디자인에 반영합니다. 프로젝트 관계자와 함께 웹 앱의 외형을 확정한 후, 최신 프론트엔드 기술로 이를 구현하여 완성도 높은 사용 경험을 제공합니다."
  },

  "technologies": {
    "header": "지속 가능한 혁신 도구",
    "backend_technologies": "백엔드 기술",
    "frontend_technologies": "프론트엔드 기술",
    "version_control_management": "버전 관리 및 운영"
  },

  "projects": {
    "projects_proud_of": "프로젝트",
    "professional_milestones": "성장의 기반이 된 경험들",

    "ontario_abandoned_place": {
      "title": "Ontario Abandoned Place(OAP)",
      "description": "OAP는 버려진 장소를 발견하고자 하는 독특한 관심사를 위해 정교하게 제작된 웹 애플리케이션 플랫폼입니다. 최신 웹 기술을 활용하여 사용자가 다양한 버려진 건축물들을 탐색할 수 있는 원활하고 몰입감 있는 사용자 경험을 제공합니다."
    },

    "cleantopia_excel_converter": {
      "title": "Cleantopia Excel GUI 변환기",
      "description": "Cleantopia Excel GUI 변환기는 Excel 파일 변환 과정을 간소화하기 위해 설계된 사용하기 쉬운 Windows Forms 애플리케이션입니다. 철저한 기획과 클라이언트와의 협의를 통해 다양한 기술 수준의 사용자들이 쉽게 접근할 수 있는 견고한 변환 애플리케이션이 개발되었습니다."
    },

    "enginex_car_rental": {
      "title": "EngineX 렌터카 샵",
      "description": "우리의 렌터카 웹 애플리케이션은 사용자의 다양한 요구를 충족하기 위해 설계되었으며, 렌터카 예약, 관리 및 추적을 효율적으로 수행할 수 있는 직관적이고 간편한 경험을 제공합니다. 이 애플리케이션은 풍부한 기능과 사용자 친화적인 인터페이스로 돋보입니다."
    }
  },

  "project_headers": {
    "project_name": "프로젝트 이름",
    "overview": "개요",
    "description": "설명",
    "role_contributions": {
      "role": "역할",
      "responsibilities": "책임"
    },
    "technologies_tools": {
      "stack": "기술 및 도구",
      "why_these_tools": "도구 선택 이유"
    },
    "project_features": "프로젝트 기능",
    "challenges_solutions": "문제 및 해결",
    "challenge": "문제",
    "solution": "해결책",
    "improvements_bug_fixes": {
      "improvement": "개선 사항",
      "bug_fix": "버그 수정"
    },
    "impact_results": {
      "metrics": "측정 지표",
      "feedback": "피드백"
    },
    "reflections_future_work": {
      "lessons_learned": "배운 점",
      "future_plans": "향후 계획"
    }
  },

  "project_detail" : {
    "fuzzy_searching": {
      "name": "fuzzy searching 기능",
      "overview": {
        "description": "퍼지 검색 기능은 사용자가 국가, 주, 카운티, 서브 카운티, 특정 위치를 탐색할 수 있는 강력한 글로벌 검색 기능을 제공합니다. 이 기능은 부분 검색도 지원하여 사용자 경험을 향상시킵니다.",
        "demo": "관리자 계정으로 OAP에서 고급 지도 데모"
      },
      "role_contributions": {
        "role": "풀스택 개발자",
        "responsibilities": [
          "퍼지 검색 기능 설계 및 구현",
          "효율적인 퍼지 검색 작업을 위해 Trigram 인덱싱 통합",
          "요청 과부하 방지를 위한 디바운스 설정",
          "불필요한 후속 요청을 피하기 위해 SWR을 사용하여 캐싱 구현"
        ]
      },
      "technologies_tools": {
        "stack": "Laravel, React, PostgreSQL, Trigram, SWR",
        "why_these_tools": {
          "Laravel": "백엔드 RESTful API를 구축하기 위한 강력한 PHP 프레임워크",
          "React": "반응형 사용자 인터페이스 구축을 위한 효율적인 프론트엔드 라이브러리",
          "PostgreSQL": "Trigram 인덱싱을 지원하는 고급 SQL 데이터베이스",
          "Trigram": "효과적인 퍼지 검색 기능 제공",
          "SWR": "데이터 페칭을 캐싱 및 재검증하는 React 훅 라이브러리"
        }
      },
      "project_features": {
        "global_search": "다양한 지리적 수준에서 포괄적인 검색 수행 가능",
        "partial_search": "부분 입력 매칭을 지원하여 검색 유연성 개선",
        "debounce_mechanism": "입력 처리를 지연시켜 요청 과부하 방지",
        "result_caching": "SWR을 사용한 검색 결과 캐싱으로 불필요한 요청 감소"
      },
      "challenges_solutions": [
        {
          "challenge": "높은 정확도의 효율적인 퍼지 검색 구현",
          "solution": "검색 결과 관련성을 제어하기 위해 유사도 임계값(e.g., 80% 일치에 0.8)을 설정하여 Trigram 인덱싱 사용"
        },
        {
          "challenge": "빠른 사용자 입력으로 인한 요청 과부하 방지",
          "solution": "검색 입력 처리를 디바운스하여 API 호출 빈도 제한"
        }
      ],
      "improvements_bug_fixes": [
        {
          "improvement": "Trigram 유사도 임계값 조정으로 검색 성능과 정확성 향상"
        },
        {
          "bug_fix": "최적의 캐시 관리를 위해 SWR을 올바르게 구성하여 캐싱 충돌 문제 해결"
        }
      ],
      "impact_results": {
        "metrics": "효과적인 캐싱과 디바운싱으로 검색 정확도 향상 및 서버 부하 감소",
        "feedback": "검색 기능의 반응성과 정확성에 대한 사용자 긍정적 피드백"
      },
      "reflections_future_work": {
        "lessons_learned": "효율적인 퍼지 검색 알고리즘 구현 및 디바운싱과 캐싱을 통한 API 성능 최적화에 대한 심층적인 통찰 획득",
        "future_plans": "추가 필터 통합 및 검색 알고리즘의 정밀도 향상을 통해 검색 기능을 강화할 계획"
      }
    },


    "advanced_map": {
      "name": "지리 정보 인터랙티브 지도",
      "overview": {
        "description": "지도 기능은 사용자가 지리적 데이터를 상호작용할 수 있게 하는 싱글 페이지 애플리케이션(SPA)입니다. Laravel, React, 기타 최신 기술을 사용하여 인증된 접근, 위치 필터링, 사용자 등급별 기능을 제공합니다.",
        "demo": "관리자 계정으로 OAP에서 고급 지도 데모"
      },
      "role_contributions": {
        "role": "풀스택 개발자",
        "responsibilities": [
          "Leaflet를 사용하여 지도 기능 구현",
          "Laravel Sanctum을 통해 인증 관리",
          "SWR을 사용하여 효율적인 데이터 페칭 및 캐싱 설정",
          "제한된 기능에 대한 사용자 정의 오류 메시지 개발"
        ]
      },
      "technologies_tools": {
        "stack": "Laravel, React, Laravel Sanctum, SWR, PostgreSQL, Leaflet",
        "why_these_tools": {
          "Laravel": "RESTful API 개발을 위한 강력한 백엔드 프레임워크 제공",
          "React": "동적이고 반응성 높은 프론트엔드 경험 보장",
          "Laravel Sanctum": "API 토큰 인증을 간소화",
          "SWR": "효율적으로 캐시하고 데이터 페칭 관리",
          "PostgreSQL": "지리적 데이터에 대한 고급 데이터베이스 기능",
          "Leaflet": "상호작용 지도를 위한 견고한 라이브러리"
        }
      },
      "project_features": {
        "map_integration": "Leaflet를 사용하여 위치 표시 및 상호작용을 위한 인터랙티브 지도",
        "bounding_box_query": "프론트엔드가 경계 상자 좌표를 백엔드로 보내어 해당 범위 내 위치를 쿼리",
        "authentication": "경로와 데이터를 보호하기 위해 Laravel Sanctum으로 인증 관리",
        "user_tier_access": "프리미엄 사용자는 추가 기능에 접근 가능하며, 제한된 접근 시 사용자 정의 HTML 오류 메시지(예: 403 금지)를 표시",
        "location_filtering": "상태, 레벨, 위험도, 카테고리별로 위치 필터링 가능",
        "data_loading": "기본 위치 정보(이름, 위도, 경도, 레벨)를 위한 즉시 로딩 및 상세 정보(앨범, 댓글)를 위한 지연 로딩",
        "debounce_and_throttle": "사용자 입력을 관리하고 요청 빈도를 제어하기 위해 디바운스 및 스로틀 구현",
        "caching": "SWR이 위치를 캐싱하여 중복 요청 방지",
        "extra_features": "사용자가 특정 좌표로 이동하고 현재 위치를 찾을 수 있는 기능 제공"
      },
      "challenges_solutions": [
        {
          "challenge": "대량 데이터셋과 빈번한 사용자 상호작용을 효율적으로 처리",
          "solution": "디바운스 및 스로틀 메커니즘을 구현하여 요청 및 상호작용 속도 제어"
        },
        {
          "challenge": "프리미엄 기능에 대한 접근 제한",
          "solution": "사용자 정의 HTML 오류 메시지를 개발하고 접근 제어를 위해 Laravel 미들웨어 사용"
        }
      ],
      "improvements_bug_fixes": [
        {
          "improvement": "성능 향상을 위해 경계 상자 로직으로 데이터베이스 쿼리 최적화"
        },
        {
          "bug_fix": "SWR을 적절히 구성하고 지도 구성 요소의 예외 상황을 처리하여 불일치한 데이터 페칭 문제 해결"
        }
      ],
      "impact_results": {
        "metrics": "효율적인 데이터 처리 및 캐싱 덕분에 사용자 참여도와 성능이 개선됨",
        "feedback": "지도 반응성 및 프리미엄 기능에 대한 원활한 접근 제어에 대한 긍정적인 피드백"
      },
      "reflections_future_work": {
        "lessons_learned": "대량 데이터셋 관리 및 효율적인 데이터 페칭 전략 구현에 대한 기술 향상",
        "future_plans": "히트맵, 경로 계획 등 더욱 상호작용적인 지도 기능 추가 계획"
      }
    }
  },

  "election": {
    "name": "선거 투표 기능",
    "overview": {
      "description": "선거 기능은 커뮤니티 투표 시스템을 통해 사용자 승급을 지원합니다. 관리자가 수동으로 진행하던 기존 승급 과정을 대체하여 사용자 참여와 몰입을 유도합니다."
    },
    "role_contributions": {
      "role": "풀스택 개발자",
      "responsibilities": [
        "사용자 승급을 위한 선거 기능 설계 및 구현",
        "사용자 데이터 수집 및 투표 메커니즘 통합",
        "옵서버 디자인 패턴을 사용하여 알림 시스템 구현",
        "팩토리 디자인 패턴과 의존성 주입을 통한 철저한 테스트 수행"
      ]
    },
    "technologies_tools": {
      "stack": "Laravel, React, PHPunit, 옵서버 디자인 패턴, 팩토리 디자인 패턴, 의존성 주입",
      "why_these_tools": {
        "Laravel": "비즈니스 로직 및 데이터베이스 작업을 처리하기 위한 강력한 백엔드 프레임워크 제공",
        "React": "동적이고 반응성 높은 프론트엔드 경험 보장",
        "PHPunit": "코드 품질과 신뢰성을 보장하기 위한 자동화 테스트 필수 도구",
        "옵서버 디자인 패턴": "선거 이벤트에 대한 알림 시스템 지원",
        "팩토리 디자인 패턴": "테스트에서 객체 생성을 단순화하여 코드 유지 관리 용이",
        "의존성 주입": "코드베이스의 테스트 가능성과 유연성 향상"
      }
    },
    "project_features": {
      "user_information_gathering": "사용자의 활동 데이터를 수집하여 앨범 수, 업로드된 사진 수, 남긴 댓글 수 등을 기록",
      "election_participation_encouragement": "사용자의 선거 참여를 유도하여 몰입을 장려",
      "voting_system": "사용자가 후보자를 찬성 또는 반대로 투표할 수 있도록 지원",
      "promotion_outcome": "일주일 후 선거 결과에 따라 승급 또는 실패 결정",
      "notification_system": "데이터베이스(내부 알림), 이메일 및 Discord 채널을 통해 선거 과정의 다양한 단계에서 알림 전송",
      "testing": "PHPunit을 사용하여 단위, 통합, 컨트롤러 테스트 수행, 팩토리 디자인 패턴과 의존성 주입을 활용해 모의 의존성 처리"
    },
    "challenges_solutions": [
      {
        "challenge": "공정하고 편향되지 않은 선거 결과 보장",
        "solution": "조작을 방지하기 위해 견고한 투표 로직과 검증 구현"
      },
      {
        "challenge": "다중 채널을 통한 실시간 알림 관리",
        "solution": "옵서버 디자인 패턴을 사용하여 효율적으로 알림을 처리하고 신속한 업데이트 보장"
      }
    ],
    "improvements_bug_fixes": [
      {
        "improvement": "선거 상태에 대한 명확하고 적시의 알림을 제공하여 사용자 경험 향상"
      },
      {
        "bug_fix": "투표 집계 오류 수정 및 찬반 투표의 정확한 집계 보장"
      }
    ],
    "impact_results": {
      "metrics": "승급 과정에서 사용자 참여도 및 몰입도 증가",
      "feedback": "투명하고 커뮤니티 중심의 승급 시스템에 대한 긍정적인 사용자 피드백"
    },
    "reflections_future_work": {
      "lessons_learned": "커뮤니티 주도 기능 구현 및 견고한 알림 시스템 구축에서 중요한 경험 획득",
      "future_plans": "선거 과정을 최적화하고 추가 참여 기능을 도입할 계획"
    }
  },


  "oAuth": {
    "name": "OAuth 페이스북 로그인 통합",
    "overview": {
      "description": "OAuth 페이스북 로그인 통합 기능은 사용자가 페이스북 자격 증명을 통해 애플리케이션에 로그인할 수 있도록 합니다. 이 기능은 OAuth 2.0 인증을 활용하여 로그인 과정을 단순화하고 보안을 강화하며 사용자 경험을 개선합니다."
    },
    "role_contributions": {
      "role": "풀스택 개발자",
      "responsibilities": [
        "OAuth 2.0 인증 흐름 설계 및 구현.",
        "원활한 로그인 기능을 위해 Facebook SDK 통합.",
        "보안 토큰 저장 및 처리를 구성.",
        "Facebook의 개인정보 보호 정책 및 데이터 처리 지침을 준수."
      ]
    },
    "technologies_tools": {
      "stack": "Laravel, React, Facebook SDK, OAuth 2.0",
      "why_these_tools": {
        "Laravel": "OAuth 2.0 인증을 구현하기 위한 강력한 백엔드 프레임워크 제공.",
        "React": "로그인 프로세스를 위한 동적이고 반응형의 사용자 인터페이스 보장.",
        "Facebook SDK": "페이스북 인증 시스템과의 통합을 쉽게 지원.",
        "OAuth 2.0": "보안 및 확장 가능한 인증을 위한 업계 표준 프로토콜."
      }
    },
    "project_features": {
      "oauth_authentication": "페이스북을 통한 보안 로그인으로, 전통적인 비밀번호 기반 인증의 필요성을 줄임.",
      "user_data_access": "로그인 성공 시 페이스북에서 기본 사용자 프로필 정보를 가져옴.",
      "token_handling": "세션 상태와 사용자 인증을 유지하기 위해 OAuth 토큰을 안전하게 저장하고 관리.",
      "error_handling": "인증 실패 시 명확하고 사용자 친화적인 오류 메시지 제공."
    },
    "challenges_solutions": [
      {
        "challenge": "안전한 토큰 저장 및 처리 보장.",
        "solution": "사용자 데이터를 보호하기 위해 암호화된 토큰 저장 및 안전한 처리 방식을 구현."
      }
    ],
    "impact_results": {
      "metrics": "간편한 인증 절차 덕분에 사용자 채택률과 로그인 성공률 증가.",
      "feedback": "페이스북 로그인 기능의 편리함과 속도에 대해 사용자들로부터 긍정적인 피드백을 받음."
    },
    "reflections_future_work": {
      "lessons_learned": "안전한 OAuth 인증 구현 및 서드파티 통합 처리에 대한 중요한 경험을 얻음.",
      "future_plans": "사용자에게 더 다양한 로그인 옵션을 제공하기 위해 추가 OAuth 제공자(예: 구글, 링크드인) 지원 계획."
    }
  }

}
